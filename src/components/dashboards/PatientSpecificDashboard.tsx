import { useLanguage } from "../../contexts/LanguageContext";
import SimpleVoiceAssistant from "../SimpleVoiceAssistant";
import LanguageSelector from "../LanguageSelector";
import LanguageDebugger from "../LanguageDebugger";

interface PatientSpecificDashboardProps {
  user: {
    userType: "patient";
    name: string;
  };
}

export default function PatientSpecificDashboard({
  user,
}: PatientSpecificDashboardProps) {
  const { currentLanguage } = useLanguage();

  // Translation texts similar to other components
  const texts = {
    english: {
      welcomeBack: "Welcome back",
      healthCompanion: "How are you feeling today? Your health is our priority.",
      heartRate: "Heart Rate",
      bloodPressure: "Blood Pressure",
      nextAppointment: "Next Appointment",
      medications: "Medications",
      normal: "Normal",
      today3pm: "Today 3 PM",
      drSharma: "Dr. Sharma",
      dueToday: "Due today",
      aiSymptomChecker: "AI Symptom Checker",
      bookAppointment: "Book Appointment",
      emergency108: "Emergency 108",
      familyHealth: "Family Health",
      aiHealthInsights: "AI Health Insights",
      goodMorning: "Good morning! Your vitals look great today.",
      vitalsGreat: "Keep up the healthy lifestyle!",
      nextCheckup: "Remember your checkup next week",
    },
    hindi: {
      welcomeBack: "‡§µ‡§æ‡§™‡§∏ ‡§∏‡•ç‡§µ‡§æ‡§ó‡§§ ‡§π‡•à",
      healthCompanion: "‡§Ü‡§ú ‡§Ü‡§™ ‡§ï‡•à‡§∏‡§æ ‡§Æ‡§π‡§∏‡•Ç‡§∏ ‡§ï‡§∞ ‡§∞‡§π‡•á ‡§π‡•à‡§Ç? ‡§Ü‡§™‡§ï‡§æ ‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§π‡§Æ‡§æ‡§∞‡•Ä ‡§™‡•ç‡§∞‡§æ‡§•‡§Æ‡§ø‡§ï‡§§‡§æ ‡§π‡•à‡•§",
      heartRate: "‡§π‡•É‡§¶‡§Ø ‡§ó‡§§‡§ø",
      bloodPressure: "‡§∞‡§ï‡•ç‡§§‡§ö‡§æ‡§™",
      nextAppointment: "‡§Ö‡§ó‡§≤‡•Ä ‡§Ö‡§™‡•â‡§á‡§Ç‡§ü‡§Æ‡•á‡§Ç‡§ü",
      medications: "‡§¶‡§µ‡§æ‡§á‡§Ø‡§æ‡§Ç",
      normal: "‡§∏‡§æ‡§Æ‡§æ‡§®‡•ç‡§Ø",
      today3pm: "‡§Ü‡§ú ‡§¶‡•ã‡§™‡§π‡§∞ 3 ‡§¨‡§ú‡•á",
      drSharma: "‡§°‡•â. ‡§∂‡§∞‡•ç‡§Æ‡§æ",
      dueToday: "‡§Ü‡§ú ‡§¶‡•á‡§Ø",
      aiSymptomChecker: "‡§è‡§Ü‡§à ‡§≤‡§ï‡•ç‡§∑‡§£ ‡§ö‡•á‡§ï‡§∞",
      bookAppointment: "‡§Ö‡§™‡•â‡§á‡§Ç‡§ü‡§Æ‡•á‡§Ç‡§ü ‡§¨‡•Å‡§ï ‡§ï‡§∞‡•á‡§Ç",
      emergency108: "‡§Ü‡§™‡§æ‡§§‡§ï‡§æ‡§≤ 108",
      familyHealth: "‡§™‡§æ‡§∞‡§ø‡§µ‡§æ‡§∞‡§ø‡§ï ‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø",
      aiHealthInsights: "‡§è‡§Ü‡§à ‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§Ö‡§Ç‡§§‡§∞‡•ç‡§¶‡•É‡§∑‡•ç‡§ü‡§ø",
      goodMorning: "‡§∏‡•Å‡§™‡•ç‡§∞‡§≠‡§æ‡§§! ‡§Ü‡§ú ‡§Ü‡§™‡§ï‡•á ‡§ú‡•Ä‡§µ‡§® ‡§∏‡§Ç‡§ï‡•á‡§§‡§ï ‡§¨‡§π‡•Å‡§§ ‡§Ö‡§ö‡•ç‡§õ‡•á ‡§≤‡§ó ‡§∞‡§π‡•á ‡§π‡•à‡§Ç‡•§",
      vitalsGreat: "‡§∏‡•ç‡§µ‡§∏‡•ç‡§• ‡§ú‡•Ä‡§µ‡§®‡§∂‡•à‡§≤‡•Ä ‡§¨‡§®‡§æ‡§è ‡§∞‡§ñ‡•á‡§Ç!",
      nextCheckup: "‡§Ö‡§ó‡§≤‡•á ‡§∏‡§™‡•ç‡§§‡§æ‡§π ‡§Ö‡§™‡§®‡•Ä ‡§ú‡§æ‡§Ç‡§ö ‡§Ø‡§æ‡§¶ ‡§∞‡§ñ‡•á‡§Ç",
    },
    tamil: {
      welcomeBack: "‡ÆÆ‡ØÄ‡Æ£‡Øç‡Æü‡ØÅ‡ÆÆ‡Øç ‡Æµ‡Æ∞‡Æµ‡Øá‡Æ±‡Øç‡Æï‡Æø‡Æ±‡Øã‡ÆÆ‡Øç",
      healthCompanion: "‡Æá‡Æ©‡Øç‡Æ±‡ØÅ ‡Æ®‡ØÄ‡Æô‡Øç‡Æï‡Æ≥‡Øç ‡Æé‡Æ™‡Øç‡Æ™‡Æü‡Æø ‡Æâ‡Æ£‡Æ∞‡Øç‡Æï‡Æø‡Æ±‡ØÄ‡Æ∞‡Øç‡Æï‡Æ≥‡Øç? ‡Æâ‡Æô‡Øç‡Æï‡Æ≥‡Øç ‡ÆÜ‡Æ∞‡Øã‡Æï‡Øç‡Æï‡Æø‡ÆØ‡ÆÆ‡Øç ‡Æé‡Æô‡Øç‡Æï‡Æ≥‡Øç ‡ÆÆ‡ØÅ‡Æ©‡Øç‡Æ©‡ØÅ‡Æ∞‡Æø‡ÆÆ‡Øà.",
      heartRate: "‡Æá‡Æ§‡ÆØ ‡Æ§‡ØÅ‡Æü‡Æø‡Æ™‡Øç‡Æ™‡ØÅ",
      bloodPressure: "‡Æá‡Æ∞‡Æ§‡Øç‡Æ§ ‡ÆÖ‡Æ¥‡ØÅ‡Æ§‡Øç‡Æ§‡ÆÆ‡Øç",
      nextAppointment: "‡ÆÖ‡Æü‡ØÅ‡Æ§‡Øç‡Æ§ ‡ÆÖ‡Æ™‡Øç‡Æ™‡Ææ‡ÆØ‡Æø‡Æ£‡Øç‡Æü‡Øç‡ÆÆ‡ØÜ‡Æ£‡Øç‡Æü‡Øç",
      medications: "‡ÆÆ‡Æ∞‡ØÅ‡Æ®‡Øç‡Æ§‡ØÅ‡Æï‡Æ≥‡Øç",
      normal: "‡Æö‡Ææ‡Æ§‡Ææ‡Æ∞‡Æ£",
      today3pm: "‡Æá‡Æ©‡Øç‡Æ±‡ØÅ ‡ÆÆ‡Æ§‡Æø‡ÆØ‡ÆÆ‡Øç 3 ‡ÆÆ‡Æ£‡Æø",
      drSharma: "‡Æü‡Ææ‡Æï‡Øç‡Æü‡Æ∞‡Øç ‡Æö‡Æ∞‡Øç‡ÆÆ‡Ææ",
      dueToday: "‡Æá‡Æ©‡Øç‡Æ±‡ØÅ ‡Æö‡ØÜ‡Æ≤‡ØÅ‡Æ§‡Øç‡Æ§ ‡Æµ‡Øá‡Æ£‡Øç‡Æü‡ØÅ‡ÆÆ‡Øç",
      aiSymptomChecker: "‡Æé‡Æê ‡ÆÖ‡Æ±‡Æø‡Æï‡ØÅ‡Æ±‡Æø ‡Æö‡Æ∞‡Æø‡Æ™‡Ææ‡Æ∞‡Øç‡Æ™‡Øç‡Æ™‡ØÅ",
      bookAppointment: "‡ÆÖ‡Æ™‡Øç‡Æ™‡Ææ‡ÆØ‡Æø‡Æ£‡Øç‡Æü‡Øç‡ÆÆ‡ØÜ‡Æ£‡Øç‡Æü‡Øç ‡Æ™‡ØÅ‡Æï‡Øç ‡Æö‡ØÜ‡ÆØ‡Øç‡ÆØ‡ØÅ‡Æô‡Øç‡Æï‡Æ≥‡Øç",
      emergency108: "‡ÆÖ‡Æµ‡Æö‡Æ∞ 108",
      familyHealth: "‡Æï‡ØÅ‡Æü‡ØÅ‡ÆÆ‡Øç‡Æ™ ‡ÆÜ‡Æ∞‡Øã‡Æï‡Øç‡Æï‡Æø‡ÆØ‡ÆÆ‡Øç",
      aiHealthInsights: "‡Æé‡Æê ‡ÆÜ‡Æ∞‡Øã‡Æï‡Øç‡Æï‡Æø‡ÆØ ‡Æ®‡ØÅ‡Æ£‡Øç‡Æ£‡Æ±‡Æø‡Æµ‡ØÅ",
      goodMorning: "‡Æï‡Ææ‡Æ≤‡Øà ‡Æµ‡Æ£‡Æï‡Øç‡Æï‡ÆÆ‡Øç! ‡Æá‡Æ©‡Øç‡Æ±‡ØÅ ‡Æâ‡Æô‡Øç‡Æï‡Æ≥‡Øç ‡Æâ‡ÆØ‡Æø‡Æ∞‡Øç‡Æö‡Øç‡Æö‡Æï‡Øç‡Æ§‡Æø ‡ÆÖ‡Æ≥‡Æµ‡ØÅ‡Æï‡Æ≥‡Øç ‡Æö‡Æø‡Æ±‡Æ™‡Øç‡Æ™‡Ææ‡Æï ‡Æâ‡Æ≥‡Øç‡Æ≥‡Æ©.",
      vitalsGreat: "‡ÆÜ‡Æ∞‡Øã‡Æï‡Øç‡Æï‡Æø‡ÆØ‡ÆÆ‡Ææ‡Æ© ‡Æµ‡Ææ‡Æ¥‡Øç‡Æï‡Øç‡Æï‡Øà ‡ÆÆ‡ØÅ‡Æ±‡Øà‡ÆØ‡Øà‡Æ§‡Øç ‡Æ§‡Øä‡Æü‡Æ∞‡ØÅ‡Æô‡Øç‡Æï‡Æ≥‡Øç!",
      nextCheckup: "‡ÆÖ‡Æü‡ØÅ‡Æ§‡Øç‡Æ§ ‡Æµ‡Ææ‡Æ∞‡ÆÆ‡Øç ‡Æâ‡Æô‡Øç‡Æï‡Æ≥‡Øç ‡Æ™‡Æ∞‡Æø‡Æö‡Øã‡Æ§‡Æ©‡Øà‡ÆØ‡Øà ‡Æ®‡Æø‡Æ©‡Øà‡Æµ‡Æø‡Æ≤‡Øç ‡Æï‡Øä‡Æ≥‡Øç‡Æ≥‡ØÅ‡Æô‡Øç‡Æï‡Æ≥‡Øç",
    },
    telugu: {
      welcomeBack: "‡∞§‡∞ø‡∞∞‡∞ø‡∞ó‡∞ø ‡∞∏‡±ç‡∞µ‡∞æ‡∞ó‡∞§‡∞Ç",
      healthCompanion: "‡∞à‡∞∞‡±ã‡∞ú‡±Å ‡∞Æ‡±Ä‡∞∞‡±Å ‡∞é‡∞≤‡∞æ ‡∞Ö‡∞®‡∞ø‡∞™‡∞ø‡∞∏‡±ç‡∞§‡±Å‡∞®‡±ç‡∞®‡∞æ‡∞∞‡±Å? ‡∞Æ‡±Ä ‡∞Ü‡∞∞‡±ã‡∞ó‡±ç‡∞Ø‡∞Ç ‡∞Æ‡∞æ ‡∞™‡±ç‡∞∞‡∞æ‡∞ß‡∞æ‡∞®‡±ç‡∞Ø‡∞§.",
      heartRate: "‡∞π‡±É‡∞¶‡∞Ø ‡∞∏‡±ç‡∞™‡∞Ç‡∞¶‡∞®",
      bloodPressure: "‡∞∞‡∞ï‡±ç‡∞§‡∞™‡±ã‡∞ü‡±Å",
      nextAppointment: "‡∞§‡∞¶‡±Å‡∞™‡∞∞‡∞ø ‡∞Ö‡∞™‡∞æ‡∞Ø‡∞ø‡∞Ç‡∞ü‡±ç‚Äå‡∞Æ‡±Ü‡∞Ç‡∞ü‡±ç",
      medications: "‡∞Æ‡∞Ç‡∞¶‡±Å‡∞≤‡±Å",
      normal: "‡∞∏‡∞æ‡∞ß‡∞æ‡∞∞‡∞£",
      today3pm: "‡∞à‡∞∞‡±ã‡∞ú‡±Å ‡∞Æ‡∞ß‡±ç‡∞Ø‡∞æ‡∞π‡±ç‡∞®‡∞Ç 3 ‡∞ó‡∞Ç‡∞ü‡∞≤‡±Å",
      drSharma: "‡∞°‡∞æ‡∞ï‡±ç‡∞ü‡∞∞‡±ç ‡∞∂‡∞∞‡±ç‡∞Æ",
      dueToday: "‡∞à‡∞∞‡±ã‡∞ú‡±Å ‡∞ö‡±Ü‡∞≤‡±ç‡∞≤‡∞ø‡∞Ç‡∞ö‡∞æ‡∞≤‡±ç‡∞∏‡∞ø‡∞®‡∞¶‡∞ø",
      aiSymptomChecker: "‡∞é‡∞ê ‡∞≤‡∞ï‡±ç‡∞∑‡∞£ ‡∞§‡∞®‡∞ø‡∞ñ‡±Ä",
      bookAppointment: "‡∞Ö‡∞™‡∞æ‡∞Ø‡∞ø‡∞Ç‡∞ü‡±ç‚Äå‡∞Æ‡±Ü‡∞Ç‡∞ü‡±ç ‡∞¨‡±Å‡∞ï‡±ç ‡∞ö‡±á‡∞Ø‡∞Ç‡∞°‡∞ø",
      emergency108: "‡∞Ö‡∞§‡±ç‡∞Ø‡∞µ‡∞∏‡∞∞ 108",
      familyHealth: "‡∞ï‡±Å‡∞ü‡±Å‡∞Ç‡∞¨ ‡∞Ü‡∞∞‡±ã‡∞ó‡±ç‡∞Ø‡∞Ç",
      aiHealthInsights: "‡∞é‡∞ê ‡∞Ü‡∞∞‡±ã‡∞ó‡±ç‡∞Ø ‡∞Ö‡∞Ç‡∞§‡∞∞‡±ç‡∞¶‡±É‡∞∑‡±ç‡∞ü‡±Å‡∞≤‡±Å",
      goodMorning: "‡∞∂‡±Å‡∞≠‡±ã‡∞¶‡∞Ø‡∞Ç! ‡∞à‡∞∞‡±ã‡∞ú‡±Å ‡∞Æ‡±Ä ‡∞ú‡±Ä‡∞µ‡∞®‡±ã‡∞™‡∞æ‡∞ß‡∞ø ‡∞∏‡∞Ç‡∞ï‡±á‡∞§‡∞æ‡∞≤‡±Å ‡∞ó‡±ä‡∞™‡±ç‡∞™‡∞ó‡∞æ ‡∞â‡∞®‡±ç‡∞®‡∞æ‡∞Ø‡∞ø.",
      vitalsGreat: "‡∞Ü‡∞∞‡±ã‡∞ó‡±ç‡∞Ø‡∞ï‡∞∞‡∞Æ‡±à‡∞® ‡∞ú‡±Ä‡∞µ‡∞®‡∞∂‡±à‡∞≤‡∞ø‡∞®‡∞ø ‡∞ï‡±ä‡∞®‡∞∏‡∞æ‡∞ó‡∞ø‡∞Ç‡∞ö‡∞Ç‡∞°‡∞ø!",
      nextCheckup: "‡∞µ‡∞ö‡±ç‡∞ö‡±á ‡∞µ‡∞æ‡∞∞‡∞Ç ‡∞Æ‡±Ä ‡∞§‡∞®‡∞ø‡∞ñ‡±Ä‡∞®‡∞ø ‡∞ó‡±Å‡∞∞‡±ç‡∞§‡±Å‡∞Ç‡∞ö‡±Å‡∞ï‡±ã‡∞Ç‡∞°‡∞ø",
    },
    bengali: {
      welcomeBack: "‡¶´‡¶ø‡¶∞‡ßá ‡¶Ü‡¶∏‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶∏‡ßç‡¶¨‡¶æ‡¶ó‡¶§‡¶Æ",
      healthCompanion: "‡¶Ü‡¶ú ‡¶Ü‡¶™‡¶®‡¶ø ‡¶ï‡ßá‡¶Æ‡¶® ‡¶¨‡ßã‡¶ß ‡¶ï‡¶∞‡¶õ‡ßá‡¶®? ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶∏‡ßç‡¶¨‡¶æ‡¶∏‡ßç‡¶•‡ßç‡¶Ø ‡¶Ü‡¶Æ‡¶æ‡¶¶‡ßá‡¶∞ ‡¶Ö‡¶ó‡ßç‡¶∞‡¶æ‡¶ß‡¶ø‡¶ï‡¶æ‡¶∞‡•§",
      heartRate: "‡¶π‡ßÉ‡¶¶‡¶∏‡ßç‡¶™‡¶®‡ßç‡¶¶‡¶®",
      bloodPressure: "‡¶∞‡¶ï‡ßç‡¶§‡¶ö‡¶æ‡¶™",
      nextAppointment: "‡¶™‡¶∞‡¶¨‡¶∞‡ßç‡¶§‡ßÄ ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶™‡¶Ø‡¶º‡ßá‡¶®‡ßç‡¶ü‡¶Æ‡ßá‡¶®‡ßç‡¶ü",
      medications: "‡¶ì‡¶∑‡ßÅ‡¶ß",
      normal: "‡¶∏‡ßç‡¶¨‡¶æ‡¶≠‡¶æ‡¶¨‡¶ø‡¶ï",
      today3pm: "‡¶Ü‡¶ú ‡¶¨‡¶ø‡¶ï‡¶æ‡¶≤ ‡ß©‡¶ü‡¶æ",
      drSharma: "‡¶°‡¶æ‡¶É ‡¶∂‡¶∞‡ßç‡¶Æ‡¶æ",
      dueToday: "‡¶Ü‡¶ú ‡¶¶‡ßá‡¶Ø‡¶º",
      aiSymptomChecker: "‡¶è‡¶Ü‡¶á ‡¶≤‡¶ï‡ßç‡¶∑‡¶£ ‡¶™‡¶∞‡ßÄ‡¶ï‡ßç‡¶∑‡¶ï",
      bookAppointment: "‡¶Ö‡ßç‡¶Ø‡¶æ‡¶™‡¶Ø‡¶º‡ßá‡¶®‡ßç‡¶ü‡¶Æ‡ßá‡¶®‡ßç‡¶ü ‡¶¨‡ßÅ‡¶ï ‡¶ï‡¶∞‡ßÅ‡¶®",
      emergency108: "‡¶ú‡¶∞‡ßÅ‡¶∞‡¶ø ‡ßß‡ß¶‡ßÆ",
      familyHealth: "‡¶™‡¶æ‡¶∞‡¶ø‡¶¨‡¶æ‡¶∞‡¶ø‡¶ï ‡¶∏‡ßç‡¶¨‡¶æ‡¶∏‡ßç‡¶•‡ßç‡¶Ø",
      aiHealthInsights: "‡¶è‡¶Ü‡¶á ‡¶∏‡ßç‡¶¨‡¶æ‡¶∏‡ßç‡¶•‡ßç‡¶Ø ‡¶Ö‡¶®‡ßç‡¶§‡¶∞‡ßç‡¶¶‡ßÉ‡¶∑‡ßç‡¶ü‡¶ø",
      goodMorning: "‡¶∏‡ßÅ‡¶™‡ßç‡¶∞‡¶≠‡¶æ‡¶§! ‡¶Ü‡¶ú ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶ú‡ßÄ‡¶¨‡¶®‡ßÄ‡¶∂‡¶ï‡ßç‡¶§‡¶ø ‡¶ö‡¶Æ‡ßé‡¶ï‡¶æ‡¶∞ ‡¶¶‡ßá‡¶ñ‡¶æ‡¶ö‡ßç‡¶õ‡ßá‡•§",
      vitalsGreat: "‡¶∏‡ßç‡¶¨‡¶æ‡¶∏‡ßç‡¶•‡ßç‡¶Ø‡¶ï‡¶∞ ‡¶ú‡ßÄ‡¶¨‡¶®‡¶Ø‡¶æ‡¶§‡ßç‡¶∞‡¶æ ‡¶¨‡¶ú‡¶æ‡¶Ø‡¶º ‡¶∞‡¶æ‡¶ñ‡ßÅ‡¶®!",
      nextCheckup: "‡¶™‡¶∞‡ßá‡¶∞ ‡¶∏‡¶™‡ßç‡¶§‡¶æ‡¶π‡ßá ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶ö‡ßá‡¶ï‡¶Ü‡¶™‡ßá‡¶∞ ‡¶ï‡¶•‡¶æ ‡¶Æ‡¶®‡ßá ‡¶∞‡¶æ‡¶ñ‡¶¨‡ßá‡¶®",
    },
  };

  const getText = (key: keyof typeof texts.english): string => {
    return (
      texts[currentLanguage as keyof typeof texts]?.[key] ||
      texts.english[key]
    );
  };

  return (
    <div className="space-y-6">
      {/* Language Debug Panel */}
      <LanguageDebugger />

      {/* Language Selector */}
      <div className="flex justify-end">
        <LanguageSelector />
      </div>

      {/* Patient Welcome Section */}
      <div className="bg-gradient-to-r from-blue-500 to-purple-600 text-white p-6 rounded-2xl">
        <h2 className="text-2xl font-bold">
          {getText("welcomeBack")}, {user.name}
        </h2>
        <p className="text-blue-100">{getText("healthCompanion")}</p>
      </div>

      {/* Health Status Cards */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
        <div className="bg-white/80 backdrop-blur-sm rounded-2xl p-6 border border-white/20">
          <div className="flex items-center justify-between">
            <div>
              <p className="text-gray-600 text-sm">{getText("heartRate")}</p>
              <p className="text-2xl font-bold text-gray-800">72 BPM</p>
              <p className="text-green-600 text-sm">{getText("normal")}</p>
            </div>
            <div className="w-12 h-12 bg-red-100 rounded-full flex items-center justify-center">
              <span className="text-2xl">‚ù§Ô∏è</span>
            </div>
          </div>
        </div>

        <div className="bg-white/80 backdrop-blur-sm rounded-2xl p-6 border border-white/20">
          <div className="flex items-center justify-between">
            <div>
              <p className="text-gray-600 text-sm">{getText("bloodPressure")}</p>
              <p className="text-2xl font-bold text-gray-800">120/80</p>
              <p className="text-green-600 text-sm">{getText("normal")}</p>
            </div>
            <div className="w-12 h-12 bg-blue-100 rounded-full flex items-center justify-center">
              <span className="text-2xl">ü©∫</span>
            </div>
          </div>
        </div>

        <div className="bg-white/80 backdrop-blur-sm rounded-2xl p-6 border border-white/20">
          <div className="flex items-center justify-between">
            <div>
              <p className="text-gray-600 text-sm">{getText("nextAppointment")}</p>
              <p className="text-lg font-bold text-gray-800">{getText("today3pm")}</p>
              <p className="text-blue-600 text-sm">{getText("drSharma")}</p>
            </div>
            <div className="w-12 h-12 bg-green-100 rounded-full flex items-center justify-center">
              <span className="text-2xl">üìÖ</span>
            </div>
          </div>
        </div>

        <div className="bg-white/80 backdrop-blur-sm rounded-2xl p-6 border border-white/20">
          <div className="flex items-center justify-between">
            <div>
              <p className="text-gray-600 text-sm">{getText("medications")}</p>
              <p className="text-2xl font-bold text-gray-800">3</p>
              <p className="text-orange-600 text-sm">{getText("dueToday")}</p>
            </div>
            <div className="w-12 h-12 bg-orange-100 rounded-full flex items-center justify-center">
              <span className="text-2xl">üíä</span>
            </div>
          </div>
        </div>
      </div>

      {/* Quick Actions for Patients */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
        <button className="bg-gradient-to-r from-pink-500 to-rose-500 text-white p-4 rounded-xl hover:shadow-lg transition-all">
          <span className="text-2xl mb-2 block">ü§ñ</span>
          <span className="font-semibold">{getText("aiSymptomChecker")}</span>
        </button>

        <button className="bg-gradient-to-r from-blue-500 to-cyan-500 text-white p-4 rounded-xl hover:shadow-lg transition-all">
          <span className="text-2xl mb-2 block">üìÖ</span>
          <span className="font-semibold">{getText("bookAppointment")}</span>
        </button>

        <button className="bg-gradient-to-r from-red-500 to-pink-500 text-white p-4 rounded-xl hover:shadow-lg transition-all">
          <span className="text-2xl mb-2 block">üö®</span>
          <span className="font-semibold">{getText("emergency108")}</span>
        </button>

        <button className="bg-gradient-to-r from-green-500 to-emerald-500 text-white p-4 rounded-xl hover:shadow-lg transition-all">
          <span className="text-2xl mb-2 block">üë®‚Äçüë©‚Äçüëß‚Äçüë¶</span>
          <span className="font-semibold">{getText("familyHealth")}</span>
        </button>
      </div>

      {/* AI Health Insights for Patients */}
      <div className="bg-white/80 backdrop-blur-sm rounded-2xl p-6 border border-white/20">
        <h3 className="text-xl font-bold text-gray-800 mb-4">
          {getText("aiHealthInsights")}
        </h3>
        <div className="space-y-3">
          <p className="text-gray-700">{getText("goodMorning")}</p>
          <p className="text-gray-600">{getText("vitalsGreat")}</p>
          <p className="text-blue-600">üíä {getText("medications")}</p>
          <p className="text-green-600">‚è∞ {getText("nextCheckup")}</p>
        </div>
      </div>

      {/* AI Voice Assistant */}
      <div className="bg-white/80 backdrop-blur-sm rounded-2xl p-6 border border-white/20">
        <SimpleVoiceAssistant
          userName={user.name}
          onCommand={(command) => {
            console.log("Voice command:", command);
            // Handle navigation based on voice commands
          }}
        />
      </div>
    </div>
  );
}
